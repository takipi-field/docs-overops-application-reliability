---
title: Installing and Configuring OverOps Reliability Platform for PCF
owner: Partners
---

<strong><%= modified_date %></strong>

This topic describes how to install and configure **OverOps Reliability Platform for PCF**.

##<a id='install'></a> Installing the OverOps Collector

To install the OverOps Reliability Platform for PCF file on the Ops Manager Installation Dashboard, do the following:

1. Download the product file for **OverOps Reliability Platform for PCF** from Pivotal Network.

1. Navigate to the Ops Manager Installation Dashboard and click **Import a Product** to upload the product file.

1. Under the **Import a Product** button, click **+** next to the version number of **OverOps Reliability Platform for PCF** file.
This adds the tile to your staging area.

1. Click the newly added **OverOps Reliability Platform for PCF** tile.

    <%= image_tag("screenshots/initial.pivotal.upload.png") %>

1. In the **OverOps Collector** section enter the **OverOps Backend URL** `https://backend.overops.com` if you access OverOps on [https://app.overops.com](https://app.overops.com), or if you access OverOps using a different URL, enter that URL. Enter the **OverOps Installation Key** for your environment. Refer to [Add an Environment](https://doc.overops.com/docs/add-an-environment) if you are unsure how to find your key. Finally, enter the **Server Name** of your choice. Refer to [Naming the Server](https://doc.overops.com/docs/naming-your-application-server-deployment#section-naming-the-server) for more information.

    <%= image_tag("screenshots/OverOps-form.png") %>

1. Click **Save**.

    <%= image_tag("screenshots/filled_out_form.png") %>

1. Return to the Ops Manager Installation Dashboard and click **Apply changes** to install OverOps Reliability Platform for PCF tile.

##<a id='connect'></a> Connect OverOps Collector to Agent

1. Ensure that your application is deployed and ensure it is using the [Java Buildpack](https://github.com/cloudfoundry/java-buildpack.git) or the Offline Java Buildpack.

1. [Map a route](https://docs.cloudfoundry.org/devguide/deploy-apps/routes-domains.html#internal-routes) to the collector that was deployed. Use the apps.internal domain in your environment to ensure your collector is not accessible from outside sources.

     ```
     cf map-route overops-collector apps.internal --hostname collector
     ```
1. Once a route is mapped, enable [container to container communication](https://docs.pivotal.io/pivotalcf/2-6/devguide/deploy-apps/cf-networking.html) using a network policy. 
    
    ```
    cf add-network-policy app_name --destination-app overops_collector_name --protocol tcp --port 8080
    ```

    <%= image_tag("screenshots/networking_example.png")%>

1. [Create a user-provided service](https://docs.cloudfoundry.org/devguide/services/user-provided.html) to enable the Takipi Agent Framework and deliver the Collector hostname and port to your application.

      ```
      cf cups takipi-service -t "takipi" -p '{"collector_host":"collector.apps.internal", "collector_port":"8080"}'
      ```
      
      <%= image_tag("screenshots/ups_example_config.png") %>

1. Bind `takipi-service` to your application.

      ```
      cf bind-service app_name takipi-service
      ```

1. Restage your application.

      ```
      cf restage app_name
      ```

1. Once the service is bound, confirm connectivity with the OverOps Analysis Server.
      <%= image_tag("screenshots/connected_app_to_collector.png")%>
